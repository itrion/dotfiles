#!/usr/bin/env bash

source ./lib_sh/echos.sh
source ./lib_sh/requires.sh

# Keep-alive: update existing sudo time stamp until the script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

#####
# install homebrew (CLI Packages)
#####

running "checking homebrew install"
brew_bin=$(which brew) 2>&1 > /dev/null
if [[ $? != 0 ]]; then
    action "installing homebrew"
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    if [[ $? != 0 ]]; then
      error "unable to install homebrew, script $0 abort!"
      exit 2
  fi
else
  ok
  # Make sure weâ€™re using the latest Homebrew
  running "updating homebrew"
  brew update
  ok
  bot "before installing brew packages, we can upgrade any outdated packages."
  read -r -p "run brew upgrade? [y|N] " response
  if [[ $response =~ ^(y|yes|Y) ]];then
      # Upgrade any already-installed formulae
      action "upgrade brew packages..."
      brew upgrade
      ok "brews updated..."
  else
      ok "skipped brew package upgrades.";
  fi
fi

#####
# install brew cask (UI Packages)
#####
running "checking brew-cask install"
output=$(brew tap | grep cask)
if [[ $? != 0 ]]; then
  action "installing brew-cask"
  require_brew caskroom/cask/brew-cask
fi
brew tap caskroom/versions > /dev/null 2>&1
brew tap caskroom/cask
brew tap caskroom/fonts
ok

# install homebrews
require_brew awscli
require_brew fontconfig
require_brew git
require_brew heroku/brew/heroku
require_brew imagemagick
require_brew terminal-notifier
require_brew tree
require_brew zsh
ok

# Install casks
require_cask bettertouchtool
require_cask docker
require_cask dropbox
require_cask emacs
require_cask franz
require_cask gimp
require_cask google-backup-and-sync
require_cask grammarly
require_cask haskell-platform
require_cask hipchat
require_cask intellij-idea
require_cask ngrok
require_cask postman
require_cask slack
require_cask skype
require_cask skype-for-business
require_cask spotify
require_cask the-unarchiver
require_cask vagrant
require_cask virtualbox
ok

# Install fonts
require_cask font-fira-code
require_cask font-fontawesome
require_cask font-awesome-terminal-fonts
require_cask font-hack
require_cask font-roboto-mono
require_cask font-source-code-pro
ok


bot "creating symlinks for project dotfiles..."
pushd link > /dev/null 2>&1
now=$(date +"%Y.%m.%d.%H.%M.%S")

for file in .*; do
    if [[ $file == "." || $file == ".." ]]; then
        continue
    fi
    running "~/$file"
    # if the file exists:
    if [[ -e ~/$file ]]; then
        mkdir -p ~/.dotfiles_backup/$now
        mv ~/$file ~/.dotfiles_backup/$now/$file
        echo "backup saved as ~/.dotfiles_backup/$now/$file"
    fi
    # symlink might still exist
    unlink ~/$file > /dev/null 2>&1
    # create the link
    ln -s ~/.dotfiles/link/$file ~/$file
    echo -en '\tlinked';ok
done

popd > /dev/null 2>&1
ok

# set zsh as the user login shell
CURRENTSHELL=$(dscl . -read /Users/$USER UserShell | awk '{print $2}')
if [[ "$CURRENTSHELL" != "/usr/local/bin/zsh" ]]; then
  bot "setting newer homebrew zsh (/usr/local/bin/zsh) as your shell (password required)"
  # sudo bash -c 'echo "/usr/local/bin/zsh" >> /etc/shells'
  # chsh -s /usr/local/bin/zsh
  sudo dscl . -change /Users/$USER UserShell $SHELL /usr/local/bin/zsh > /dev/null 2>&1
  ok
fi

# node version manager
require_brew nvm

# nvm
require_nvm stable

# always pin versions (no surprises, consistent dev/build machines)
npm config set save-exact true
npm install diff-so-fancy
npm install tern

# Install rvm
curl -sSL https://get.rvm.io | bash -s stable
source $HOME/.rvm/scripts/rvm

RUBY_VERSION=2.5
rvm install "ruby-${RUBY_VERSION}"
rvm use ${RUBU_VERSION} --default

running "cleanup homebrew"
brew cleanup > /dev/null 2>&1
ok

# Java (SDK man)
curl -s "https://get.sdkman.io" | bash
source "$HOME/.sdkman/bin/sdkman-init.sh"
