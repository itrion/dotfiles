#!/usr/bin/env bash

source ./lib_sh/echos.sh
source ./lib_sh/requires.sh
source ./lib_sh/homebrew.sh

# Keep-alive: update existing sudo time stamp until the script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

homebrew.install-brew

# install homebrews
require_brew ag
require_brew awscli
require_brew fontconfig
require_brew git
require_brew global
require_brew heroku/brew/heroku
require_brew imagemagick
require_brew terminal-notifier
require_brew tree
require_brew zsh
ok

# Install casks
require_brew bettertouchtool
require_brew docker
require_brew ispell
require_brew loopback
require_brew postman
require_brew robo-3t
require_brew spotify
require_brew the-unarchiver
ok

# Install fonts
require_brew font-fira-code
require_brew font-fontawesome
require_brew font-awesome-terminal-fonts
require_brew font-hack
require_brew font-roboto-mono
require_brew font-source-code-pro
ok


bot "creating symlinks for project dotfiles..."
pushd link > /dev/null 2>&1
now=$(date +"%Y.%m.%d.%H.%M.%S")

for file in .*; do
    if [[ $file == "." || $file == ".." ]]; then
        continue
    fi
    running "~/$file"
    # if the file exists:
    if [[ -e ~/$file ]]; then
        mkdir -p ~/.dotfiles_backup/$now
        mv ~/$file ~/.dotfiles_backup/$now/$file
        echo "backup saved as ~/.dotfiles_backup/$now/$file"
    fi
    # symlink might still exist
    unlink ~/$file > /dev/null 2>&1
    # create the link
    ln -s ~/.dotfiles/link/$file ~/$file
    echo -en '\tlinked';ok
done

popd > /dev/null 2>&1
ok

# set zsh as the user login shell
CURRENTSHELL=$(dscl . -read /Users/$USER UserShell | awk '{print $2}')
if [[ "$CURRENTSHELL" != "/usr/local/bin/zsh" ]]; then
  bot "setting newer homebrew zsh (/usr/local/bin/zsh) as your shell (password required)"
  # sudo bash -c 'echo "/usr/local/bin/zsh" >> /etc/shells'
  # chsh -s /usr/local/bin/zsh
  sudo dscl . -change /Users/$USER UserShell $SHELL /usr/local/bin/zsh > /dev/null 2>&1
  ok
fi

# node version manager
require_brew nvm

# nvm
require_nvm stable

# always pin versions (no surprises, consistent dev/build machines)
npm config set save-exact true
npm install diff-so-fancy
npm install tern

# Install rvm and lts ruby
require_brew rbenv
rbenv init
rbenv install -l
ok

# Java (SDK man)
curl -s "https://get.sdkman.io" | bash
source "$HOME/.sdkman/bin/sdkman-init.sh"